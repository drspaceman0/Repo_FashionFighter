<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0.5
state=IDLE
moveSpd=4

maxHealth=12
hp=maxHealth

sightDistance=256
fightDistance=58

knockbackDir=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Knockback timer

state=IDLE
image_blend=-1
image_speed=0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pX=obj_player.x; pY=obj_player.y;
distance = abs(x-pX) + abs(y-pY)
if(hp&lt;=0)
{
    state=DEATH
}

switch(state)
{
    case IDLE:
        speed = 0
        if(sprite_index != spr_enemy_idle) 
        {
            sprite_index=spr_enemy_idle;
            image_index=0
        } 
        if(distance&lt;sightDistance) state=APPROACH_PLAYER
        break
    case APPROACH_PLAYER:
        if(sprite_index != spr_enemy_move) 
        {
            sprite_index=spr_enemy_move;
            image_index=0
        }
        if(abs(x-pY)&gt;32) {
            if(x&gt;pX)image_xscale=-1
            else image_xscale=1
        }
         
        if(distance&gt;sightDistance) {
            state=IDLE
            break
        }
        else if(distance&lt;fightDistance) {
            state=ATTACK
            break
        }
        move_towards_point(pX, pY, moveSpd) 
        break
    case ATTACK:
        speed=0
        if(sprite_index!=spr_enemy_punch){
            sprite_index=spr_enemy_punch;
            image_index=0;}
        else if(image_index == 5) {
            hitbox = instance_create(x + image_xscale*32,y,obj_hitbox)
            hitbox.parent=id
            hitbox.dmg=2
        } else if(image_index == 10) {
            // end attack
            state=IDLE
        }  
        break
    case KNOCKBACK:
        if(sprite_index!=spr_enemy_hurt)
        {
            sprite_index=spr_enemy_hurt
            image_index=0 
            // set timer to end knockback
            alarm[0]=room_speed/4
            //image_blend=make_colour_rgb(255,0,0)
        }
        // move away from damage
        x += knockbackDir*2
        
        // stop animating on last frame
        if(image_index&gt;=4)
        {
            image_speed=0
        }
        
        // flash red 
        /*
        if(image_blend == make_colour_rgb(255,0,0))
            image_blend = -1
        else
            image_blend = make_colour_rgb(255,0,0)
        */
        break
    case DEATH:
        instance_destroy()
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.parent==global.player)
{ 
    hp-=other.dmg
    state=KNOCKBACK
    if(abs(other.parent.x-x)&lt;12)
        knockbackDir = 0
    else if(other.parent.x&gt;x)
        knockbackDir = -1
    else
        knockbackDir = 1
    // find a better way to handle hitbox destruction
    with other 
    {
        instance_destroy()
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if(hp&lt;maxHealth)
    draw_healthbar(x + image_xscale*8, y-32,x + image_xscale*8 + 16, y-28,(hp/maxHealth)*100,c_black,c_red,c_lime,0,true,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
